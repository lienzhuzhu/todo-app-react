{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","id","completed","handleDeleteClick","bind","assertThisInitialized","handleCompleteClick","console","log","self","createRequest","XMLHttpRequest","onreadystatechange","readyState","status","setState","todos","toConsumableArray","concat","JSON","parse","responseText","input","open","send","completedClass","react_default","a","createElement","data-todo-id","className","type","onClick","value","Component","NewTodo","name","App","refreshTodosFromApi","todoId","_this2","src_NewTodo_0","map","item","src_Todo_0","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f0633591.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: props.text,\n      id: props.id,\n      completed: props.completed\n    }\n\n    // this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleCompleteClick = this.handleCompleteClick.bind(this);\n  }\n\n  handleCompleteClick() {\n    console.log(\"Complete here.\");\n    console.log(this);\n\n    var self = this;\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save new Todo to state\n        self.setState({\n          todos: [...self.state.todos, JSON.parse(this.responseText)]\n        })\n        // clear the input field\n        self.setState({input: ''});\n      }\n    }\n\n    createRequest.open(\"completed\", true);\n    createRequest.send();\n  }\n\n  handleDeleteClick() {\n    console.log(\"Delete here.\");\n    console.log(this);\n\n    var self = this;\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save new Todo to state\n        self.setState({\n          todos: [...self.state.todos, JSON.parse(this.responseText)]\n        })\n        // clear the input field\n        self.setState({input: ''});\n      }\n    }\n\n    createRequest.open(\"delete\", true);\n    createRequest.send();\n\n    // this.setState(state => ({\n    //   isToggleOn: !state.isToggleOn\n    // }));\n  }\n\n  render() {\n    let completedClass = false;\n    if (this.state.completed === true) {\n      completedClass = \"completed-class\";\n    } else {\n      completedClass = \"not-completed-class\";\n    }\n\n    return (\n      <div data-todo-id={this.state.id} className=\"todo\">\n        <h2 className={completedClass}>{this.state.text}</h2>\n        <input type=\"checkbox\"></input>\n        <input onClick={this.handleDeleteClick} type=\"button\" value=\"delete\"></input>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  render() {\n    return (\n      <div id=\"{data-todo.id}\" className=\"Todo\">\n        <h2>Add A Todo Item Form</h2>\n       \n        <input type=\"text\" name=\"add-todo-input\" id=\"add-input\"/>\n        <input type=\"submit\" name=\"add-todo-btn\" id=\"add-button\" value=\"Add\"/>\n      \n      </div>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport Todo from './Todo'\nimport './App.css';\nimport NewTodo from './NewTodo';\n\n\nconst apiKey = \"96364a-276feb-952475-c85e9e-d6e333\";\n\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    }\n  }\n\n  componentDidMount() {\n    this.refreshTodosFromApi();\n  }\n\n  refreshTodosFromApi() {\n    console.log(\"ComponentDidMount() ran\");\n\n    //   // Make API call to fetch existing Todos.\n    //   fetch('http://example.com/todos')\n    //   .then(function (response) {\n    //     this.setState({todos: JSON.parse(response)}); // this line in onreadystatehange\n    //   }\n    // );\n\n    this.setState({\n      todos: [\n        {\n          text: \"first item\",\n          id: 123456,\n          completed: true\n        },\n        {\n          text: \"second item\",\n          id: 789123, \n          completed: false\n        }\n      ]\n    })\n\n  }\n\n  updateComponentCompletedState(todoId) {\n    // iterate over this.state.todos\n    // look for the item with id todoId\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Lien's ToDo App</h1>\n        <NewTodo/>\n        <section id=\"myTodos\">\n          <hr></hr>\n\n          {this.state.todos.map((item) =>\n            <Todo \n              text={item.text} \n              id={item.id} \n              completed={item.completed} \n              key={item.id}\n              refreshTodosFromApi={this.refreshTodosFromApi}\n            />\n          )}\n\n          <hr></hr>\n        </section>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}