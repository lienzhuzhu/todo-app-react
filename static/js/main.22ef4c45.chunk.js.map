{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["apiKey","Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","id","completed","handleDeleteClick","bind","assertThisInitialized","handleCompleteClick","data","document","getElementById","checked","self","completeRequest","XMLHttpRequest","onreadystatechange","readyState","status","refreshTodosFromApi","open","setRequestHeader","send","JSON","stringify","deleteRequest","completedClass","react_default","a","createElement","data-todo-id","className","onChange","type","defaultChecked","onClick","value","Component","NewTodo","handleTextChange","createNewTodo","inputText","event","setState","target","preventDefault","onSubmit","name","App","todos","inputTextFromChildComponent","createRequest","toConsumableArray","concat","parse","responseText","loadRequest","_this2","src_NewTodo_0","map","item","src_Todo_0","key","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.22ef4c45.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\n\nconst apiKey = \"96364a-276feb-952475-c85e9e-d6e333\";\n\nclass Todo extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: props.text,\n      id: props.id,\n      completed: props.completed,\n    }\n\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleCompleteClick = this.handleCompleteClick.bind(this);\n  }\n\n\n  // checkbox click event handler\n  //\n  handleCompleteClick() {\n    let checkButton = document.getElementById(this.state.id);\n\n    let data;\n    if (checkButton.checked) {\n      data = {\n          \"completed\": true\n      }\n    } else {\n      data = {\n          \"completed\": false\n      }\n    }\n    \n    let self = this;\n    let completeRequest = new XMLHttpRequest();\n    completeRequest.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        self.props.refreshTodosFromApi();\n      }\n    }\n    completeRequest.open(\"PUT\", \"https://cse204.work/todos/\"+self.state.id, true);\n    completeRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    completeRequest.setRequestHeader(\"x-api-key\", apiKey);\n    completeRequest.send(JSON.stringify(data));\n  }\n\n\n  // delete button click event handler\n  //\n  handleDeleteClick() {\n    let self = this;\n    let deleteRequest = new XMLHttpRequest();\n    \n    deleteRequest.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        self.props.refreshTodosFromApi();\n      } \n    }\n\n    deleteRequest.open(\"DELETE\", \"https://cse204.work/todos/\"+self.state.id, true);\n    deleteRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    deleteRequest.setRequestHeader(\"x-api-key\", apiKey);\n    deleteRequest.send();\n  }\n\n  render() {\n    let completedClass = \"\";\n    if (this.props.completed === true) {      // this.state.completed === blah doesn't work\n      completedClass = \"completed-class\";\n    } else {\n      completedClass = \"not-completed-class\";\n    }\n\n    return (\n      <div data-todo-id={this.state.id} className=\"todo-item-wrapper\">\n        <input onChange={this.handleCompleteClick} id={this.state.id} type=\"checkbox\" className=\"complete-checkbox-class\" defaultChecked={this.props.completed} ></input>\n        <p className={completedClass}>{this.state.text}</p>\n        <input onClick={this.handleDeleteClick} type=\"button\" value=\"delete\" className=\"delete-button-class\"></input>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\n\nclass NewTodo extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.createNewTodo = this.createNewTodo.bind(this);\n\n    this.state = {\n      inputText: \"\"\n    }\n  }\n\n  // handle text input \n  //\n  handleTextChange(event) {\n    this.setState({inputText: event.target.value});\n    this.props.handleTextChange(event.target.value);\n  }\n\n  // create new todo on form submission \n  // by calling parent function\n  //\n  createNewTodo(event) {\n    event.preventDefault();\n    this.props.createNewTodo();\n    this.setState({inputText: \"\"});\n  }\n\n\n  render() {\n    return (\n      <div id=\"form-id\" className=\"form-wrapper\">\n        <form onSubmit={this.createNewTodo} className=\"add-form\" id=\"add-item-form\">\n          <input value={this.state.inputText} onChange={this.handleTextChange} type=\"text\" name=\"add-todo-input\" id=\"add-input\"/>\n          <button type=\"submit\" id=\"add-button\">Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport Todo from './Todo'\nimport NewTodo from './NewTodo';\nimport './App.css';\n\n\nconst apiKey = \"96364a-276feb-952475-c85e9e-d6e333\";\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],                                                // array with all todos in server\n      inputText: \"\",                                            // value from input form\n    }\n\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.createNewTodo = this.createNewTodo.bind(this);\n    this.refreshTodosFromApi = this.refreshTodosFromApi.bind(this);\n  }\n\n  // detect change in text input\n  //\n  handleTextChange(inputTextFromChildComponent) {\n    this.setState({inputText: inputTextFromChildComponent});\n  }\n\n  // add item\n  //\n  createNewTodo() {\n    let data = {\n      text: this.state.inputText\n    }\n\n    let self = this;\n    let createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function() {\n        if (this.readyState === 4 && this.status === 200) {\n            self.setState({\n              todos: [...self.state.todos, JSON.parse(this.responseText)]\n            });\n        } \n    };\n\n    createRequest.open(\"POST\", \"https://cse204.work/todos\", true);\n    createRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    createRequest.setRequestHeader(\"x-api-key\", apiKey);\n    createRequest.send(JSON.stringify(data));\n  }\n\n\n  // loads items from server into todos array\n  //\n  componentDidMount() {\n    this.refreshTodosFromApi();\n  }\n  \n  // helper method to load items from server\n  //\n  refreshTodosFromApi() {\n    let self = this;\n    let loadRequest = new XMLHttpRequest();\n\n    loadRequest.onreadystatechange = function() {\n        if (this.readyState === 4 && this.status === 200) {\n          self.setState({\n            todos: JSON.parse(this.responseText)       \n          });\n        }\n    };\n\n    loadRequest.open(\"GET\", \"https://cse204.work/todos\", true);\n    loadRequest.setRequestHeader(\"x-api-key\", apiKey);\n    loadRequest.send();\n  }\n  \n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <h1>Your To-do List</h1>\n\n        <NewTodo handleTextChange={this.handleTextChange} createNewTodo={this.createNewTodo} />  \n\n        <div id=\"item-list-wrapper\">\n          {this.state.todos.map((item) =>\n            <Todo \n              key={item.id}\n              text={item.text} \n              id={item.id}\n              completed={item.completed} \n              refreshTodosFromApi={this.refreshTodosFromApi}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}